plugins {
  id "org.sonarqube" version "3.1.1"
  id 'jacoco'
  id 'java'
}
repositories {
    mavenCentral()
}
sonarqube {
  properties {
    property "sonar.projectName", "org.gecko.github.template"
    property "sonar.projectKey", "geckoprojects-org_org.gecko.github.template"
    property "sonar.organization", "geckoprojects-org"
    property "sonar.host.url", "https://sonarcloud.io"
    property "sonar.coverage.jacoco.xmlReportPaths", "${rootDir}/build/reports/jacoco/codeCoverageReport/codeCoverageReport.xml"
  }
}

tasks.named('wrapper') {
  jarFile = rootProject.file('.gradle-wrapper/gradle-wrapper.jar')
}


task codeCoverageReport(type: JacocoReport) {

    // Gather execution data from all subprojects
    executionData fileTree(project.rootDir.absolutePath).include("**/**/jacoco.exec")

    // Add all relevant sourcesets from the subprojects
    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        html.enabled true
        csv.enabled false
    }
}

// always run the tests before generating the report
//codeCoverageReport.dependsOn {
//    subprojects*.testrun
//}

tasks.named("sonarqube") {
    dependsOn(codeCoverageReport)
}




//task generateMergedReport(type: JacocoReport) {
// // dependsOn = subprojects.test
//  additionalSourceDirs.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
//  sourceDirectories.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
//  classDirectories.setFrom files(subprojects.sourceSets.main.output)
//  executionData.setFrom project.fileTree(dir: '.', include: '**/**/jacoco.exec')
//  reports {
//    xml.enabled true
//    xml.destination file("${buildDir}/reports/jacoco/aggregate.xml")
//    csv.enabled false
//    html.enabled true
//  }
//}
//testrun.finalizedBy jacocoTestReport

// Make JaCoCo report generation part of the 'sonarqube' lifecycle phase
